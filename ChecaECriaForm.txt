procedure TUsuarioLogado.CriarForm(aNomeForm: TFormClass; aUsuarioLogado: TusuarioLogado; aConexao: TZConnection);
var form: TForm;
    Qry: TZQuery;
    i: Integer;
begin
  try
    form := aNomeForm.Create(Application);
    try
      Qry:=TZQuery.Create(nil);
      Qry.Connection:=aConexao;
      Qry.SQL.clear;
      Qry.SQL.Add('SELECT ua.acaoAcessoId, ua.usuarioId,ua.ativo,a.chave FROM ' +
                  ' usuariosAcaoAcesso as ua ' +
                  ' inner join AcaoAcesso as a on a.acaoAcessoId = ua.acaoAcessoId ' +
                  ' WHERE ua.usuarioId = :usuarioId');
      Qry.ParamByName('usuarioId').AsInteger := self.F_usuarioId;
      Qry.Open;
      Qry.First;
      while not Qry.Eof do begin
      if Qry.FieldByName('ativo').AsBoolean=False then
      begin
        for i:=0 to form.ComponentCount-1 do begin
          if (form.Components[i] is TBitbtn) and (form.Components[i].Tag=99) then
          begin
            if form.Name+'_'+TBitBtn(form.Components[i]).Name = Qry.FieldByName('chave').AsString then
              TBitBtn(form.Components[i]).OnClick:= MenssageSemAcesso;
          end;
        end;
      end;
      Qry.Next;
      end;

    finally
      if assigned(Qry) then
        FreeAndNil(Qry);

    end;
    form.ShowModal;
    finally
      if Assigned(form) then
      form.Release;
    end;
end;




procedure TUsuarioLogado.MenssageSemAcesso(Sender: TObject);
var Botao: TBitBtn;
begin
  Botao := TBitBtn(Sender);
  MessageDlg('Usuario: '+Self.F_nome+ ' não tem permissão de acesso a função '+
  StringReplace(Botao.Caption,'&','',[rfReplaceAll]),mtWarning,[mbOK],0);
end;




procedure TUsuarioLogado.ItensMenuVisiveis(aMainPrincipal: TMainMenu);
var i: Integer;
   j: Integer;
   MenuItem: TMenuItem;
begin
  for i:=0 to aMainPrincipal.Items.Count-1 do begin
    MenuItem := aMainPrincipal.Items[i];
    for j:=0 to MenuItem.Count-1 do
      MenuItem.Visible := True;
  end;


end;